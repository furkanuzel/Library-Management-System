using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LMS
{
    class Program
    {
        public class Student
        {
            public int Id { get; set; }
            public string Student_Name { get; set; }
            public string Address { get; set; }
            public int Age { get; set; }
            public string Email { get; set; }
            public string Password { get; set; }
            public int Number_of_books { get; set; }

            public string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";

            public int Return_book(Student std)
            {
                SqlConnection conn = new SqlConnection(connStr);
                conn.Open();

                Student student = new Student();
                int student_id = student.GetStudentId(std);
                using (SqlCommand cmdSelect = new SqlCommand("Select * from Book where User_Id = @id", conn))
                {
                    cmdSelect.Parameters.AddWithValue("id", student_id);
                    using (SqlDataReader reader = cmdSelect.ExecuteReader())
                    {
                        Console.WriteLine("{0,-15} {1,-15} ", "ID", "Title");
                        while (reader.Read())
                        {
                            Console.WriteLine("{0,-15} {1,-15}", reader["Id"].ToString(), (string)reader["Title"]);
                        }
                    }
                }
                Console.WriteLine("Select the book You are returning: ");
                int book = Convert.ToInt32(Console.ReadLine());
                using (SqlCommand cmdUpdate = new SqlCommand("UPDATE Book SET Quantity = Quantity + 1, User_Id = @userId WHERE Id = @id", conn))
                {
                    cmdUpdate.Parameters.AddWithValue("@id", book);
                    cmdUpdate.Parameters.AddWithValue("@userId", 0);
                    cmdUpdate.ExecuteNonQuery();
                }
                using (SqlCommand cmdUpdateStudent = new SqlCommand("UPDATE Student SET Num_of_books = Num_of_books - 1 WHERE  ID = @id", conn))
                {
                    cmdUpdateStudent.Parameters.AddWithValue("@id", student_id);
                    return cmdUpdateStudent.ExecuteNonQuery();
                }

            }

            public int GetStudentId(Student std)
            {
                int student_id = 0;
                SqlConnection conn = new SqlConnection(connStr);
                conn.Open();
                string query = "Select ID From Student where Email = @email AND Password = @pass";
                SqlCommand command = new SqlCommand(query, conn);

                command.Parameters.AddWithValue("@email", std.Email);
                command.Parameters.AddWithValue("@pass", std.Password);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                        student_id = Convert.ToInt32(reader["Id"]);
                }
                return student_id;
            }

            public int Lend_book(Student std)
            {
                Student student = new Student();
                int student_id = student.GetStudentId(std);
                Book bk = new Book();
                SqlConnection conn = new SqlConnection(connStr);
                int std_id;
                conn.Open();
                string query = "SELECT * from Student where Email = @email AND Password = @pass";
                SqlCommand command = new SqlCommand(query, conn);

                command.Parameters.AddWithValue("@email", std.Email);
                command.Parameters.AddWithValue("@pass", std.Password);
                SqlDataReader reader = command.ExecuteReader();

                if (reader.Read())
                {
                    if (Convert.ToInt32(reader["Num_of_books"]) >= 3)
                    {
                        std_id = Convert.ToInt32(reader["ID"]);
                        Console.WriteLine("You have already lended 3 Books, So, you cannot lend anymore. . . . . . . . . . . ");
                        reader.Close();
                        return 0;
                    }
                    reader.Close();
                }

                bk.ViewAll();

                Console.WriteLine("Select the ID of the book you want to lend: ");
                int book = Convert.ToInt32(Console.ReadLine());

                using (SqlCommand cmdCheck = new SqlCommand("SELECT Quantity FROM Book WHERE Id=@id", conn))
                {
                    cmdCheck.Parameters.AddWithValue("id", book);
                    int quantity = (int)cmdCheck.ExecuteScalar();
                    if (quantity <= 0)
                    {
                        throw new Exception("Book not available");
                    }
                    else
                    {
                        using (SqlCommand cmdUpdate = new SqlCommand("UPDATE Book SET Quantity = Quantity - 1, User_Id = @userId WHERE Id = @id", conn))
                        {
                            cmdUpdate.Parameters.AddWithValue("@id", book);
                            cmdUpdate.Parameters.AddWithValue("@userId", student_id);
                            cmdUpdate.ExecuteNonQuery();
                        }
                        using (SqlCommand cmdUpdateStudent = new SqlCommand("UPDATE Student SET Num_of_books = Num_of_books + 1 WHERE  Email = @email AND Password = @pass", conn))
                        {
                            cmdUpdateStudent.Parameters.AddWithValue("@email", std.Email);
                            cmdUpdateStudent.Parameters.AddWithValue("@pass", std.Password);
                            return cmdUpdateStudent.ExecuteNonQuery();
                        }
                    }
                }

            }

            public int Login(Student std)
            {
                Console.WriteLine("Enter Your Email: ");
                std.Email = Console.ReadLine();
                Console.WriteLine("Enter your Password: ");
                std.Password = Console.ReadLine();

                string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True"; ;
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * FROM Student";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                if (Password == (string)reader["Password"] && Email == (string)reader["Email"])
                                    return 1;
                            }
                            return 0;
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }


            public int Register(Student std)
            {

                Console.WriteLine("Plz Provide the asked Details...");
                Console.WriteLine("Enter your Name: ");
                std.Student_Name = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter your Age: ");
                std.Age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                Console.WriteLine("Enter your Email: ");
                std.Email = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter your Adress: ");
                std.Address = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Set a password: ");
                std.Password = Console.ReadLine();
                Console.WriteLine();

                std.Number_of_books = 0;

                string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "INSERT INTO Student (Name, Address, Age,Email,Password,Num_of_books) VALUES (@name, @address, @age,@email,@password,0)";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@name", Student_Name);
                        command.Parameters.AddWithValue("@age", Age);
                        command.Parameters.AddWithValue("@address", Address);
                        command.Parameters.AddWithValue("@email", Email);
                        command.Parameters.AddWithValue("@password", Password);
                        int result = command.ExecuteNonQuery();
                        return result;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
        }

        public class Admin
        {
            public int Id { get; set; }
            public string Email { get; set; }
            public string Password { get; set; }

            public string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";

            public int Login(Admin ad)
            {
                Console.WriteLine("Enter Your Email: ");
                ad.Email = Console.ReadLine();
                Console.WriteLine("Enter your Password: ");
                ad.Password = Console.ReadLine();

                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * FROM Admin";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                if (Password == (string)reader["Password"] && Email == (string)reader["Email"])
                                    return 1;
                            }
                            return 0;
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            public int Add_Book(Book bk)
            {
                Console.WriteLine("Plz Provide the asked Details...");
                Console.WriteLine("Enter Book Title: ");
                bk.Title = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter ISBN Number: ");
                bk.ISBN = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter book Authur: ");
                bk.Author = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Language: ");
                bk.Language = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Subject: ");
                bk.Subject = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Number of Pages: ");
                bk.Number_of_Pages = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                Console.WriteLine("Enter Number of Books: ");
                bk.Quantity = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                bk.User_ID = 0;

                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "INSERT INTO Book (Title,Authur,ISBN,Language,Subject,Num_of_Pages,Quantity,user_Id) VALUES (@title,@author,@isbn,@lang,@sub,@pages,@quant,@userId)";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@title", bk.Title);
                        command.Parameters.AddWithValue("@author", bk.Author);
                        command.Parameters.AddWithValue("@isbn", bk.ISBN);
                        command.Parameters.AddWithValue("@lang", bk.Language);
                        command.Parameters.AddWithValue("@sub", bk.Subject);
                        command.Parameters.AddWithValue("@pages", bk.Number_of_Pages);
                        command.Parameters.AddWithValue("@quant", bk.Quantity);
                        command.Parameters.AddWithValue("@userId", bk.User_ID);

                        int result = command.ExecuteNonQuery();
                        return result;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            public int Remove_Book()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                Console.WriteLine(reader["Id"].ToString() + " " + (string)reader["Title"]);
                            }
                        }
                    }

                    Console.WriteLine("Select the Title of the book you want to remove: ");
                    int ID = Convert.ToInt32(Console.ReadLine());
                    string remove = "DELETE FROM Book WHERE Id = @identity";
                    using (SqlCommand comm = new SqlCommand(remove, conn))
                    {
                        comm.Parameters.AddWithValue("@identity", ID);
                        return comm.ExecuteNonQuery();
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }


            }
            public int Update_Book_Stock()
            {
                SqlConnection conn = new SqlConnection(connStr);
                ViewAllBooks();
                Console.WriteLine("Select the book You want to edit ");
                int book = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("Enter New Title: ");
                string title = Console.ReadLine();

                Console.WriteLine("Enter New ISBN: ");
                string isbn = Console.ReadLine();

                Console.WriteLine("Enter New Language: ");
                string lang = Console.ReadLine();

                Console.WriteLine("Enter New Number of Pages: ");
                string pages = Console.ReadLine();

                Console.WriteLine("Enter New Quantity: ");
                string quan = Console.ReadLine();

                try
                {
                    conn.Open();
                    string query = "Update Book Set Title = @title, ISBN = @isbn, Language = @lan, Num_of_Pages = @pages, Quantity = @quan Where Id = @id";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@title", title);
                        command.Parameters.AddWithValue("@isbn", isbn);
                        command.Parameters.AddWithValue("@lan", lang);
                        command.Parameters.AddWithValue("@pages", pages);
                        command.Parameters.AddWithValue("@quan", quan);
                        command.Parameters.AddWithValue("@id", book);
                        return command.ExecuteNonQuery();
                    }
                }                
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
            public void ViewAllBooks()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10} {8,-10}", "ID", "Title", "Author", "Language", "Subject", "Pages", "Quantity", "ISBN", "User_Id");
                            while (reader.Read())
                            {
                                Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10} {8,-10}", reader["Id"].ToString(), (string)reader["Title"], (string)reader["Authur"], (string)reader["Language"], (string)reader["Subject"], reader["Num_of_Pages"].ToString(), reader["Quantity"].ToString(), reader["ISBN"].ToString(), Convert.ToInt32(reader["User_Id"]));
                            }
                        }
                    }
                }
