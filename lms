using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LMS
{
    class Program
    {
        public class Student
        {
            public int Id { get; set; }
            public string Student_Name { get; set; }
            public string Address { get; set; }
            public int Age { get; set; }
            public string Email { get; set; }
            public string Password { get; set; }
            public int Number_of_books { get; set; }

            public string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";

            public int Return_book(Student std)
            {
                SqlConnection conn = new SqlConnection(connStr);
                conn.Open();

                Student student = new Student();
                int student_id = student.GetStudentId(std);
                using (SqlCommand cmdSelect = new SqlCommand("Select * from Book where User_Id = @id", conn))
                {
                    cmdSelect.Parameters.AddWithValue("id", student_id);
                    using (SqlDataReader reader = cmdSelect.ExecuteReader())
                    {
                        Console.WriteLine("{0,-15} {1,-15} ", "ID", "Title");
                        while (reader.Read())
                        {
                            Console.WriteLine("{0,-15} {1,-15}", reader["Id"].ToString(), (string)reader["Title"]);
                        }
                    }
                }
                Console.WriteLine("Select the book You are returning: ");
                int book = Convert.ToInt32(Console.ReadLine());
                using (SqlCommand cmdUpdate = new SqlCommand("UPDATE Book SET Quantity = Quantity + 1, User_Id = @userId WHERE Id = @id", conn))
                {
                    cmdUpdate.Parameters.AddWithValue("@id", book);
                    cmdUpdate.Parameters.AddWithValue("@userId", 0);
                    cmdUpdate.ExecuteNonQuery();
                }
                using (SqlCommand cmdUpdateStudent = new SqlCommand("UPDATE Student SET Num_of_books = Num_of_books - 1 WHERE  ID = @id", conn))
                {
                    cmdUpdateStudent.Parameters.AddWithValue("@id", student_id);
                    return cmdUpdateStudent.ExecuteNonQuery();
                }

            }

            public int GetStudentId(Student std)
            {
                int student_id = 0;
                SqlConnection conn = new SqlConnection(connStr);
                conn.Open();
                string query = "Select ID From Student where Email = @email AND Password = @pass";
                SqlCommand command = new SqlCommand(query, conn);

                command.Parameters.AddWithValue("@email", std.Email);
                command.Parameters.AddWithValue("@pass", std.Password);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                        student_id = Convert.ToInt32(reader["Id"]);
                }
                return student_id;
            }

            public int Lend_book(Student std)
            {
                Student student = new Student();
                int student_id = student.GetStudentId(std);
                Book bk = new Book();
                SqlConnection conn = new SqlConnection(connStr);
                int std_id;
                conn.Open();
                string query = "SELECT * from Student where Email = @email AND Password = @pass";
                SqlCommand command = new SqlCommand(query, conn);

                command.Parameters.AddWithValue("@email", std.Email);
                command.Parameters.AddWithValue("@pass", std.Password);
                SqlDataReader reader = command.ExecuteReader();

                if (reader.Read())
                {
                    if (Convert.ToInt32(reader["Num_of_books"]) >= 3)
                    {
                        std_id = Convert.ToInt32(reader["ID"]);
                        Console.WriteLine("You have already lended 3 Books, So, you cannot lend anymore. . . . . . . . . . . ");
                        reader.Close();
                        return 0;
                    }
                    reader.Close();
                }

                bk.ViewAll();

                Console.WriteLine("Select the ID of the book you want to lend: ");
                int book = Convert.ToInt32(Console.ReadLine());

                using (SqlCommand cmdCheck = new SqlCommand("SELECT Quantity FROM Book WHERE Id=@id", conn))
                {
                    cmdCheck.Parameters.AddWithValue("id", book);
                    int quantity = (int)cmdCheck.ExecuteScalar();
                    if (quantity <= 0)
                    {
                        throw new Exception("Book not available");
                    }
                    else
                    {
                        using (SqlCommand cmdUpdate = new SqlCommand("UPDATE Book SET Quantity = Quantity - 1, User_Id = @userId WHERE Id = @id", conn))
                        {
                            cmdUpdate.Parameters.AddWithValue("@id", book);
                            cmdUpdate.Parameters.AddWithValue("@userId", student_id);
                            cmdUpdate.ExecuteNonQuery();
                        }
                        using (SqlCommand cmdUpdateStudent = new SqlCommand("UPDATE Student SET Num_of_books = Num_of_books + 1 WHERE  Email = @email AND Password = @pass", conn))
                        {
                            cmdUpdateStudent.Parameters.AddWithValue("@email", std.Email);
                            cmdUpdateStudent.Parameters.AddWithValue("@pass", std.Password);
                            return cmdUpdateStudent.ExecuteNonQuery();
                        }
                    }
                }

            }

            public int Login(Student std)
            {
                Console.WriteLine("Enter Your Email: ");
                std.Email = Console.ReadLine();
                Console.WriteLine("Enter your Password: ");
                std.Password = Console.ReadLine();

                string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True"; ;
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * FROM Student";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                if (Password == (string)reader["Password"] && Email == (string)reader["Email"])
                                    return 1;
                            }
                            return 0;
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }


            public int Register(Student std)
            {

                Console.WriteLine("Plz Provide the asked Details...");
                Console.WriteLine("Enter your Name: ");
                std.Student_Name = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter your Age: ");
                std.Age = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                Console.WriteLine("Enter your Email: ");
                std.Email = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter your Adress: ");
                std.Address = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Set a password: ");
                std.Password = Console.ReadLine();
                Console.WriteLine();

                std.Number_of_books = 0;

                string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "INSERT INTO Student (Name, Address, Age,Email,Password,Num_of_books) VALUES (@name, @address, @age,@email,@password,0)";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@name", Student_Name);
                        command.Parameters.AddWithValue("@age", Age);
                        command.Parameters.AddWithValue("@address", Address);
                        command.Parameters.AddWithValue("@email", Email);
                        command.Parameters.AddWithValue("@password", Password);
                        int result = command.ExecuteNonQuery();
                        return result;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
        }

        public class Admin
        {
            public int Id { get; set; }
            public string Email { get; set; }
            public string Password { get; set; }

            public string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";

            public int Login(Admin ad)
            {
                Console.WriteLine("Enter Your Email: ");
                ad.Email = Console.ReadLine();
                Console.WriteLine("Enter your Password: ");
                ad.Password = Console.ReadLine();

                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * FROM Admin";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                if (Password == (string)reader["Password"] && Email == (string)reader["Email"])
                                    return 1;
                            }
                            return 0;
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            public int Add_Book(Book bk)
            {
                Console.WriteLine("Plz Provide the asked Details...");
                Console.WriteLine("Enter Book Title: ");
                bk.Title = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter ISBN Number: ");
                bk.ISBN = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter book Authur: ");
                bk.Author = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Language: ");
                bk.Language = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Subject: ");
                bk.Subject = Console.ReadLine();
                Console.WriteLine();

                Console.WriteLine("Enter Number of Pages: ");
                bk.Number_of_Pages = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                Console.WriteLine("Enter Number of Books: ");
                bk.Quantity = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine();

                bk.User_ID = 0;

                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "INSERT INTO Book (Title,Authur,ISBN,Language,Subject,Num_of_Pages,Quantity,user_Id) VALUES (@title,@author,@isbn,@lang,@sub,@pages,@quant,@userId)";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@title", bk.Title);
                        command.Parameters.AddWithValue("@author", bk.Author);
                        command.Parameters.AddWithValue("@isbn", bk.ISBN);
                        command.Parameters.AddWithValue("@lang", bk.Language);
                        command.Parameters.AddWithValue("@sub", bk.Subject);
                        command.Parameters.AddWithValue("@pages", bk.Number_of_Pages);
                        command.Parameters.AddWithValue("@quant", bk.Quantity);
                        command.Parameters.AddWithValue("@userId", bk.User_ID);

                        int result = command.ExecuteNonQuery();
                        return result;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            public int Remove_Book()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                Console.WriteLine(reader["Id"].ToString() + " " + (string)reader["Title"]);
                            }
                        }
                    }

                    Console.WriteLine("Select the Title of the book you want to remove: ");
                    int ID = Convert.ToInt32(Console.ReadLine());
                    string remove = "DELETE FROM Book WHERE Id = @identity";
                    using (SqlCommand comm = new SqlCommand(remove, conn))
                    {
                        comm.Parameters.AddWithValue("@identity", ID);
                        return comm.ExecuteNonQuery();
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }


            }
            public int Update_Book_Stock()
            {
                SqlConnection conn = new SqlConnection(connStr);
                ViewAllBooks();
                Console.WriteLine("Select the book You want to edit ");
                int book = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("Enter New Title: ");
                string title = Console.ReadLine();

                Console.WriteLine("Enter New ISBN: ");
                string isbn = Console.ReadLine();

                Console.WriteLine("Enter New Language: ");
                string lang = Console.ReadLine();

                Console.WriteLine("Enter New Number of Pages: ");
                string pages = Console.ReadLine();

                Console.WriteLine("Enter New Quantity: ");
                string quan = Console.ReadLine();

                try
                {
                    conn.Open();
                    string query = "Update Book Set Title = @title, ISBN = @isbn, Language = @lan, Num_of_Pages = @pages, Quantity = @quan Where Id = @id";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@title", title);
                        command.Parameters.AddWithValue("@isbn", isbn);
                        command.Parameters.AddWithValue("@lan", lang);
                        command.Parameters.AddWithValue("@pages", pages);
                        command.Parameters.AddWithValue("@quan", quan);
                        command.Parameters.AddWithValue("@id", book);
                        return command.ExecuteNonQuery();
                    }
                }                
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
            public void ViewAllBooks()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10} {8,-10}", "ID", "Title", "Author", "Language", "Subject", "Pages", "Quantity", "ISBN", "User_Id");
                            while (reader.Read())
                            {
                                Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10} {8,-10}", reader["Id"].ToString(), (string)reader["Title"], (string)reader["Authur"], (string)reader["Language"], (string)reader["Subject"], reader["Num_of_Pages"].ToString(), reader["Quantity"].ToString(), reader["ISBN"].ToString(), Convert.ToInt32(reader["User_Id"]));
                            }
                        }
                    }
                }
 catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
            public void ViewAllStudents()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Student";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            Console.WriteLine("{0,-10} {1,-10} {2,-10} {3,-10} {4,-20} {5,-10}", "ID", "Name", "Age", "Address", "Email", "Num_of_books");
                            while (reader.Read())
                            {
                                Console.WriteLine("{0,-10} {1,-10} {2,-10} {3,-10} {4,-20} {5,-10}", reader["ID"].ToString(), (string)reader["Name"], reader["Age"].ToString(), (string)reader["Address"], (string)reader["Email"], reader["Num_of_books"].ToString());
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
            public void Remove_User()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Student";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {

                            Console.WriteLine("{0,-15} {1,-15} {2,-15} ", "ID", "Name", "Email");
                            while (reader.Read())
                            {
                                Console.WriteLine("{0,-15} {1,-15} {2,-15}", reader["Id"].ToString(), (string)reader["Name"], (string)reader["Email"]);
                            }
                        }
                    }

                    Console.WriteLine("Select the ID of the Student you want to remove: ");
                    int ID = Convert.ToInt32(Console.ReadLine());
                    string remove = "DELETE FROM Student WHERE Id = @identity";
                    using (SqlCommand comm = new SqlCommand(remove, conn))
                    {
                        comm.Parameters.AddWithValue("@identity", ID);
                        comm.ExecuteNonQuery();
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
            public int Update_User()
            {
                SqlConnection conn = new SqlConnection(connStr);

                ViewAllStudents();

                Console.WriteLine("Enter the Id of the Student you want to update: ");
                int id = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("Enter New Name: ");
                string name = Console.ReadLine();

                Console.WriteLine("Enter New Address: ");
                string address = Console.ReadLine();

                Console.WriteLine("Enter New Age: ");
                int age = Convert.ToInt32(Console.ReadLine());

                Console.WriteLine("Enter New Email: ");
                string email = Console.ReadLine();

                Console.WriteLine("Enter New Number of Books: ");
                int books = Convert.ToInt32(Console.ReadLine());

                try
                {
                    conn.Open();
                    string query = "Update Student Set Name=@name, Address=@address , Age = @age , Email = @email , Num_of_books = @num Where ID=@id";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@name", name);
                        command.Parameters.AddWithValue("@address", address);
                        command.Parameters.AddWithValue("@age", age);
                        command.Parameters.AddWithValue("@email", email);
                        command.Parameters.AddWithValue("@num", books);
                        command.Parameters.AddWithValue("@id", id);
                        return command.ExecuteNonQuery();
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }
        }
        public class Book
        {
            public int Id { get; set; }
            public string Title { get; set; }
            public string Author { get; set; }
            public string ISBN { get; set; }
            public string Language { get; set; }
            public string Subject { get; set; }
            public int Number_of_Pages { get; set; }
            public int Quantity { get; set; }
            public int User_ID { get; set; }

            public string connStr = "Data Source=DESKTOP-TL8MHN8;Initial Catalog=LMS;Integrated Security=True";

            public void ViewAll()
            {
                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10}", "ID", "Title", "Author", "Language", "Subject", "Pages", "Quantity", "ISBN");
                            while (reader.Read())
                            {
                                Console.WriteLine("{0,-15} {1,-15} {2,-10} {3,-10} {4,-10} {5,-10} {6,-10} {7,-10}", reader["Id"].ToString(), (string)reader["Title"], (string)reader["Authur"], (string)reader["Language"], (string)reader["Subject"], reader["Num_of_Pages"].ToString(), reader["Quantity"].ToString(), reader["ISBN"].ToString());
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            public Book GetBook(int id)
            {
                Book bk = new Book();

                SqlConnection conn = new SqlConnection(connStr);
                try
                {
                    conn.Open();
                    string query = "SELECT * from Book Where Id = @id";
                    using (SqlCommand command = new SqlCommand(query, conn))
                    {
                        command.Parameters.AddWithValue("@id", id);
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                bk.Id = Convert.ToInt32(reader["Id"]);
                                bk.Title = (string)reader["Title"];
                                bk.Author = (string)reader["Authur"];
                                bk.Language = (string)reader["Language"];
                                bk.Subject = (string)reader["Subject"];
                                bk.Number_of_Pages = Convert.ToInt32(reader["Num_of_Pages"]);
                                bk.Quantity = Convert.ToInt32(reader["Quantity"]);
                                bk.ISBN = (string)reader["ISBN"];
                                bk.User_ID = Convert.ToInt32(reader["User_Id"]);
                            }
                        }
                        return bk;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                finally
                {
                    if (conn.State == ConnectionState.Open)
                        conn.Close();
                }
            }

            static void Main(string[] args)
            {
                Console.WriteLine("Hello! Welcome to the Library.");
                Console.WriteLine("Enter Your Choice!");
                Console.WriteLine("1. Student");
                Console.WriteLine("2. Admin");
                int choice;
                choice = Convert.ToInt32(Console.ReadLine());
                while (choice > 2 || choice < 1)
                {
                    Console.WriteLine("Enter a valid choice!");
                    choice = Convert.ToInt32(Console.ReadLine());
                }
                if (choice == 1)
                {
                    Console.Clear();
                    int choice2;
                    Console.WriteLine("1. LogIn");
                    Console.WriteLine("2. Register");

                    choice2 = Convert.ToInt32(Console.ReadLine());
                    while (choice2 > 2 || choice2 < 1)
                    {
                        Console.WriteLine("Enter a valid choice!");
                        choice2 = Convert.ToInt32(Console.ReadLine());
                    }

                    if (choice2 == 1)
                    {
                        Console.WriteLine("Enter your credentials to LOGIN. . . ");
                        Student std = new Student();
                        int login = std.Login(std);
                        if (login == 1)
                        {
                            Console.WriteLine("LoggedIn");
                            Console.WriteLine("_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
                            int choice4;
                            do
                            {
                                Console.WriteLine("1. View Books");
                                Console.WriteLine("2. Lend Book");
                                Console.WriteLine("3. Return Book");
                                Console.WriteLine("4. Exit");

                                Console.WriteLine("Enter Your Choice: ");
                                choice4 = Convert.ToInt32(Console.ReadLine());
                                while (choice4 < 0 || choice4 > 4)
                                {
                                    Console.WriteLine("Enter a valid option...");
                                    choice4 = Convert.ToInt32(Console.ReadLine());
                                }

                                if (choice4 == 1)
                                {
                                    Admin ad = new Admin();
                                    ad.ViewAllBooks();
                                }
                                else if (choice4 == 2)
                                {
                                    std.Lend_book(std);
                                    Console.WriteLine("The book being Assigned to You.");
                                }
                                else if (choice4 == 3)
                                {
                                    std.Return_book(std);
                                    Console.WriteLine("The book is Received.");
                                }
                                else if (choice4 == 4)
                                {
                                    return;
                                }
                            } while (choice4 != 4);
                        }
                        else
                        {
                            Console.WriteLine("Invalid Credentials.");
                        }
                    }

                    if (choice2 == 2)
                    {
                        Student std = new Student();
                        int res = std.Register(std);
                        if (res == 1)
                        {
                            Console.WriteLine("Registered");
                        }
                    }
                }
                if (choice == 2)
                {
                    Console.Clear();
                    Console.WriteLine("Hey Admin! LogIn to proceed...");
                    Admin ad = new Admin();
                    int ad_login = ad.Login(ad);
                    if (ad_login == 1)
                    {
                        Console.Clear();
                        Console.WriteLine("Welcome to LMS Admin!");
                        int choice3;
                        do
                        {
                            Console.WriteLine("1. Add Book");
                            Console.WriteLine("2. Remove Book");
                            Console.WriteLine("3. Update Book Stock");
                            Console.WriteLine("4. View All Books");
                            Console.WriteLine("5. View All Students");
                            Console.WriteLine("6. Update User Details");
                            Console.WriteLine("7. Remove User");
                            Console.WriteLine("8. End Function");
                            Console.WriteLine();

                            Console.WriteLine("Enter Your Choice: ");
                            choice3 = Convert.ToInt32(Console.ReadLine());
                           
                            while (choice3 < 0 || choice3 > 8)
                            {
                                Console.WriteLine("Enter a valid option...");
                                choice3 = Convert.ToInt32(Console.ReadLine());
                            }

                            Book bk = new Book();
                            if (choice3 == 1)
                            {
                                int addbook = ad.Add_Book(bk);
                                if (addbook == 1)
                                    Console.WriteLine("Book Added Successfully...");
                                else
                                    Console.WriteLine("Error in adding new Book...");
                            }
                            else if (choice3 == 2)
                            {
                                int rem = ad.Remove_Book();
                                if (rem == 1)
                                    Console.WriteLine("Book Removed Successfully...");
                                else if (rem == 0)
                                    Console.WriteLine("Error in removing Book...");
                            }
                            else if (choice3 == 3)
                            {
                                int rem = ad.Update_Book_Stock();
                                if (rem == 1)
                                    Console.WriteLine("Book Updated Successfully...");
                                else if (rem == 0)
                                    Console.WriteLine("Error in updating Book...");
                            }
                            else if (choice3 == 4)
                            {
                                ad.ViewAllBooks();
                            }
                            else if (choice3 == 5)
                            {
                                ad.ViewAllStudents();
                            }
                            else if (choice3 == 6)
                            {
                                int rem = ad.Update_User();
                                if (rem == 1)
                                    Console.WriteLine("Student Updated Successfully...");
                                else if (rem == 0)
                                    Console.WriteLine("Error in updating Student...");
                            }
                            else if (choice3 == 7)
                            {
                                ad.Remove_User();
                            }
                            else if (choice3 == 8)
                            {
                                return;
                            }
                        } while (choice3 != 8);
                    }
                    else
                    {
                        Console.WriteLine("Invalid Credentials...");
                    }
                }
                return;
            }

        }
    }
}
